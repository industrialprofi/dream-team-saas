#!/usr/bin/env ruby
require "fileutils"

APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args, exception: true)
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts "== Installing dependencies =="
  system("bundle check") || system!("bundle install")

  # Install Node.js dependencies if package.json exists
  if File.exist?("package.json")
    puts "\n== Installing Node.js dependencies =="
    system!("yarn install")
  end

  # puts "\n== Copying sample files =="
  # unless File.exist?("config/database.yml")
  #   FileUtils.cp "config/database.yml.sample", "config/database.yml"
  # end

  puts "\n== Waiting for database to be ready =="
  max_attempts = 30
  attempt = 0
  
  loop do
    attempt += 1
    begin
      system("bin/rails runner 'ActiveRecord::Base.connection'", out: File::NULL, err: File::NULL)
      break if $?.success?
    rescue
      # Database not ready yet
    end
    
    if attempt >= max_attempts
      puts "Database is not ready after #{max_attempts} attempts. Please check your database configuration."
      exit 1
    end
    
    puts "Waiting for database... (attempt #{attempt}/#{max_attempts})"
    sleep 2
  end

  puts "\n== Preparing database =="
  system! "bin/rails db:prepare"

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"

  unless ARGV.include?("--skip-server")
    puts "\n== Starting development server =="
    STDOUT.flush # flush the output before exec(2) so that it displays
    exec "bin/dev"
  end
end
